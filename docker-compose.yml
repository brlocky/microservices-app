services:
  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    command: npm run start:debug gateway
    # env_file:
    #   - ./apps/gateway/.env
    depends_on:
      - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
      - '9229:9229'
    profiles: [ "app" ]
    networks:
      - network

  user:
    container_name: user
    build:
      context: .
      dockerfile: ./apps/user/Dockerfile
      target: development
    command: npm run start:debug user
    # env_file:
    #   - ./apps/user/.env
    depends_on:
      - kafka
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '9230:9229'
    profiles: [ "app" ]
    networks:
      - network
  
  todo:
    container_name: todo
    build:
      context: .
      dockerfile: ./apps/todo/Dockerfile
      target: development
    command: npm run start:debug todo
    # env_file:
    #   - ./apps/todo/.env
    depends_on:
      - kafka
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '9231:9229'
    profiles: [ "app" ]
    networks:
      - network
  
  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    profiles: [ "server" ]

  mongodb:
    container_name: mongodb
    image: mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    profiles: [ "server" ]
    networks:
      - network
  
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    profiles: [ "server" ]
    networks:
      - network
  
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    profiles: [ "server" ]
    networks:
      - network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    profiles: [ "server" ]
    networks:
      - network
  
  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      PORT: 9021
    profiles: [ "server" ]
    networks:
      - network

networks:
  network:
    driver: bridge